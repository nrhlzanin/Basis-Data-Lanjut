/*Soal 1*/
SELECT orderid, orderdate, val,
	ROW_NUMBER() OVER (ORDER BY orderdate) AS rowno
FROM Sales.OrderValues;

/*Soal 2*/
SELECT orderid, orderdate, val,
	ROW_NUMBER() OVER (ORDER BY orderdate) AS rowno,
	RANK() OVER(ORDER BY orderdate) AS rankno
FROM Sales.OrderValues;

/*Soal 4*/
SELECT orderid, orderdate, custid, val,
	RANK() OVER(PARTITION BY custid ORDER BY val DESC) AS oderrankno
FROM Sales.OrderValues;

/*Soal 5*/
SELECT custid, val,
	YEAR(orderdate) AS orderyear,
	RANK() OVER(PARTITION BY custid, YEAR(orderdate) ORDER BY val DESC AS orderrankno
FROM Sales.OrderValues;

/*Soal 6*/
SELECT custid, orderyear, orderrankno, val
FROM (
	SELECT	custid, val,
	YEAR(orderdate) AS orderyear,
	RANK() OVER(PARTITION BY custid, YEAR(orderdate) ORDER BY val DESC) AS orderrankno
	FROM Sales.OrderValues
) AS rankedorders
WHERE orderrankno <= 2;

/*Soal 7*/
WITH OrderRows AS (
	SELECT orderid, orderdate, val,
		ROW_NUMBER() OVER(ORDER BY orderdate, orderid) AS rowno 
	FROM Sales.OrderValues
)
SELECT orderid, orderdate, val, rowno
FROM OrderRows;

/*Soal 8*/
WITH OrderRows AS (
	SELECT orderid, orderdate, val,
		ROW_NUMBER() OVER(ORDER BY orderdate, orderid) AS rowno 
	FROM Sales.OrderValues
)
SELECT current1.orderid, current1.orderdate, current1.val, 
	prev.val as prevval,
	current1.val - prev.val as diffprev
FROM OrderRows AS current1
LEFT JOIN OrderRows AS prev ON current1.rowno = prev.rowno + 1;

/*Soal 9*/
SELECT ov.orderid, ov.orderdate, ov.val,
	LAG(ov.val) OVER(ORDER BY ov.orderdate, ov.orderid) AS prevval,
	ov.val - LAG(ov.val) OVER(ORDER BY ov.orderdate, ov.orderid) AS diffprev
FROM Sales.OrderValues ov;

/*Soal 10*/
WITH SalesMonth2007 AS(
	SELECT MONTH(orderdate) AS monthno,
	SUM(val) AS val
	FROM Sales.OrderValues
	WHERE YEAR(orderdate) = 2007
	GROUP BY MONTH(orderdate)
)
SELECT * FROM SalesMonth2007

/*Soal 11*/
WITH SalesMonth2007 AS(
	SELECT MONTH(orderdate) AS monthno,
	SUM(val) AS val
	FROM Sales.OrderValues
	WHERE YEAR(orderdate) = 2007
	GROUP BY MONTH(orderdate)
)
SELECT sm.monthno, sm.val, 
	AVG(val) OVER (ORDER BY sm.monthno ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS avglast3months,
    COALESCE(val - FIRST_VALUE(sm.val) OVER (ORDER BY sm.monthno ASC), 0) AS diffjanuary,
    LEAD(sm.val, 1, 0) OVER(ORDER BY sm.monthno) AS nextval
FROM SalesMonth2007 sm;

/*Soal 12*/
SELECT custid, orderid, orderdate, val,
	val / SUM(val) OVER(PARTITION BY custid) * 100.0 AS percenttotalcust
FROM Sales.OrderValues
ORDER BY custid, orderid DESC;

/*Soal 13*/
SELECT custid, orderid, orderdate, val,
	val / SUM(val) OVER(PARTITION BY custid) * 100.0 AS percenttotalcust,
	SUM(val) OVER(PARTITION BY custid ORDER BY orderdate, orderid) AS runval
FROM Sales.OrderValues
ORDER BY custid, orderid DESC;

/*Soal 14*/
WITH SalesMonth2007 AS(
	SELECT MONTH(orderdate) AS monthno,
	SUM(val) AS valn
	FROM Sales.OrderValues
	WHERE YEAR(orderdate) = 2007
	GROUP BY MONTH(orderdate)
)
SELECT monthno, val, 
	AVG(val) OVER (ORDER BY monthno ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS avglast3months,
    SUM(val) OVER (ORDER BY monthno ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ytdval
FROM SalesMonth2007;
